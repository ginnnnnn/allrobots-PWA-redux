{"version":3,"sources":["reducers.js","components/CounterButton/CounterButton.js","components/Header/Header.js","components/cards/Card.js","components/UI/Spinner/Spinner.js","components/cards/CardList.js","components/searchBox/SearchBox.js","components/scroll/Scroll.js","containers/App.js","actions.js","constants.js","serviceWorker.js","index.js"],"names":["initSearchField","searchField","initRobots","robots","isPending","err","CounterButton","state","count","onCounterClick","_this","setState","nextProps","nextState","this","console","log","react_default","a","createElement","color","props","onClick","Component","Header","components_CounterButton_CounterButton","Card","_ref","robot","name","birth_year","created","className","src","concat","alt","Spinner","CardList","robotsArray","Cards","map","cards_Card","key","length","UI_Spinner_Spinner","SearchBox","searchChange","type","placeholder","onChange","aria-label","Scroll","style","overflow","height","children","App","handleRequestRobots","_this$props","handleSearchChange","filteredCards","filter","toLowerCase","includes","contantBody","scroll_Scroll","cards_CardList","components_Header_Header","searchBox_SearchBox","connect","searchRobots","fetchRobotApi","dispatch","e","payload","target","value","fetch","then","r","json","res","results","catch","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","error","rootReducer","combineReducers","arguments","undefined","action","Object","assign","objectSpread","store","createStore","applyMiddleware","thunk","ReactDOM","render","es","src_containers_App","document","getElementById","URL","process","href","origin","addEventListener","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.9d601292.chunk.js","sourcesContent":["import {\n  CHANGE_SEARCHFIELD,\n  FETCH_API_PEDDING,\n  FETCH_API_SUCCESS,\n  FETCH_API_FAIL\n} from \"./constants\";\n\nconst initSearchField = {\n  searchField: \"\"\n};\n\nexport const searchRobots = (state = initSearchField, action = {}) => {\n  if (action.type === CHANGE_SEARCHFIELD) {\n    return Object.assign({}, state, { searchField: action.payload });\n  }\n  return state; //always return default state or it will get undefine in the beginnng\n};\n\nconst initRobots = {\n  robots: [],\n  isPending: false,\n  err: \"\"\n};\n\nexport const fetchRobotApi = (state = initRobots, action = {}) => {\n  switch (action.type) {\n    case FETCH_API_PEDDING:\n      return { ...state, isPending: true };\n    case FETCH_API_SUCCESS:\n      return { ...state, isPending: false, robots: action.payload };\n    case FETCH_API_FAIL:\n      return { ...state, isPending: false, err: action.payload };\n    default:\n      return state;\n  }\n};\n","import React, { Component } from 'react'\n\n\nclass CounterButton extends Component {\n    state = {\n        count: 0\n    }\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextState !== this.state) {\n            return true\n        } else {\n            return false\n        }\n    }\n    onCounterClick = () => {\n        this.setState(state => {\n            return { count: state.count + 1 }\n        })\n    }\n\n    render() {\n        console.log(this.state.count)\n        return <button color={this.props.color} onClick={this.onCounterClick}> Count:{this.state.count}</button>\n    }\n}\nexport default CounterButton","import React, { Component } from 'react'\n\nimport CounterButton from '../CounterButton/CounterButton'\n\nclass Header extends Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        return false\n    }\n    render() {\n        console.log('header')\n        return (<div>\n            <CounterButton color='yellow' />\n            <h1> We Are All Robots</h1></div>)\n    }\n}\nexport default Header","import React from \"react\";\n\nconst Card = ({ robot }) => {\n  const { name, birth_year, created } = robot;\n  return (\n    <div className=\"bg-light-blue dib pa3 bw2 br3 ma2 shadow-3 grow\">\n      <div>\n        <img\n          src={`https://robohash.org/${created}/set_any/bgset_any/size_200x200`}\n          alt=\"humans\"\n        />\n      </div>\n      <div>\n        <h4>{name}</h4>\n        <p>{birth_year}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default Card;\n","import React from \"react\";\n\nimport \"./Spinner.css\";\n\nconst Spinner = () => {\n  return (\n    <div>\n      <div className=\"lds-hourglass\" />\n    </div>\n  );\n};\nexport default Spinner;\n","import React from \"react\";\nimport Card from \"./Card\";\nimport Spinner from \"../UI/Spinner/Spinner\";\n\nconst CardList = ({ robotsArray }) => {\n  console.log('cardList')\n  const Cards = robotsArray.map(robot => {\n    return <Card key={robot.created} robot={robot} />;\n  });\n  return <div className=\"tc mt2\">{Cards.length ? Cards : <Spinner />}</div>;\n};\nexport default CardList;\n","import React from \"react\";\n\nconst SearchBox = ({ searchChange }) => {\n  console.log('searchbox')\n  return (\n    <div className=\" pa3\">\n      <input\n        className=\"pa2 ba b--red bg-light-blue \"\n        type=\"search\"\n        placeholder=\"type n Search\"\n        onChange={searchChange}\n        aria-label='Search Robots'\n      />\n    </div>\n  );\n};\n\nexport default SearchBox;\n","import React from \"react\";\n\nconst Scroll = props => {\n  console.log('scroll')\n  return (\n    <div\n      style={{ overflow: \"scroll\", height: \"600px\" }}\n      className=\"ba bw2 b--orange br3\"\n    >\n      {props.children}\n    </div>\n  );\n};\nexport default Scroll;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport \"./App.css\";\n\nimport Header from '../components/Header/Header'\nimport CardList from \"../components/cards/CardList\";\nimport SearchBox from \"../components/searchBox/SearchBox\";\nimport Scroll from \"../components/scroll/Scroll\";\nimport Spinner from \"../components/UI/Spinner/Spinner\";\n\nimport { setSearchField, requestRobots } from \"../actions\";\n\nconst mapStateToProps = state => {\n  return {\n    searchField: state.searchRobots.searchField,\n    robots: state.fetchRobotApi.robots,\n    isPending: state.fetchRobotApi.isPending,\n    err: state.fetchRobotApi.err\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    handleSearchChange: e => dispatch(setSearchField(e.target.value)),\n    handleRequestRobots: () => dispatch(requestRobots())\n  };\n}; //dispatch() ,dispatach action to reducer\n\nclass App extends Component {\n  state = {\n    robots: []\n  };\n\n  componentDidMount() {\n    this.props.handleRequestRobots();\n  }\n\n  render() {\n    const {\n      searchField,\n      handleSearchChange,\n      robots,\n      isPending,\n      err\n    } = this.props;\n    console.log(err);\n    const filteredCards = robots.filter(robot => {\n      return robot.name.toLowerCase().includes(searchField.toLowerCase());\n    });\n\n    let contantBody = <Spinner />;\n    if (!isPending) {\n      contantBody = (\n        <Scroll>\n          <CardList robotsArray={filteredCards} />\n        </Scroll>\n      );\n    }\n    if (err) {\n      contantBody = <h1>Oops Something went wrong</h1>;\n    }\n\n    return (\n      <div className=\"App tc vh-100 ma0\">\n        <div className=\"bb b--yellow pa3 bw2\">\n          <Header />\n        </div>\n        <SearchBox searchChange={handleSearchChange} />\n        {contantBody}\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App);\n","import {\n  CHANGE_SEARCHFIELD,\n  FETCH_API_PEDDING,\n  FETCH_API_SUCCESS,\n  FETCH_API_FAIL\n} from \"./constants\";\n\nexport const setSearchField = text => ({\n  type: CHANGE_SEARCHFIELD,\n  payload: text\n});\n\nexport const requestRobots = () => dispatch => {\n  dispatch({ type: FETCH_API_PEDDING });\n  fetch(\"https://swapi.co/api/people\")\n    .then(r => r.json())\n    .then(res => {\n      dispatch({ type: FETCH_API_SUCCESS, payload: res.results });\n    })\n    .catch(err => {\n      dispatch({ type: FETCH_API_FAIL, payload: err });\n    });\n};\n","export const CHANGE_SEARCHFIELD = \"CHANGE_SEARCHFIELD\";\nexport const FETCH_API_PEDDING = \"FETCH_API_PEDDING\";\nexport const FETCH_API_SUCCESS = \"FETCH_API_SUCCESS\";\nexport const FETCH_API_FAIL = \"FETCH_API_FAIL\";\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\"; // high order function for passing store to components\nimport { createStore, applyMiddleware, combineReducers } from \"redux\";\n// import { createLogger } from \"redux-logger\";\nimport thunk from \"redux-thunk\";\nimport { searchRobots, fetchRobotApi } from \"./reducers\";\nimport \"./index.css\";\nimport App from \"./containers/App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"tachyons\";\n\n// const logger = createLogger();\n\nconst rootReducer = combineReducers({ searchRobots, fetchRobotApi }); //passing obj\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}